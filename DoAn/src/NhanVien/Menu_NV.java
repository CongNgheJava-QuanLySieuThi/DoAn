/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package NhanVien;

import dao.DanhMucDAO;
import dao.DonHangDAO;
import dao.MucDonHangDAO;
import dao.NguoiDungDAO;
import dao.SanPhamDAO;
import pojo.DanhMuc;
import pojo.DonHang;
import pojo.MucDonHang;
import pojo.NguoiDung;
import pojo.SQLServerDataProvider;
import pojo.SanPham;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import dao.ChiTietHoaDonDAO;
import dao.HoaDonDAO;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DecimalFormat;
import pojo.ChiTietHoaDon;
import pojo.HoaDon;
/**
 *
 * @author User
 */
public class Menu_NV extends javax.swing.JFrame {
    private SQLServerDataProvider dataProvider;
    private static long maND;
    private static String ho;
    private static String ten;
    int x = 210;    //chieu rong
    int y = 835;    //chieu cao

    /**
     * Creates new form Menu
     */
    public Menu_NV(long maND,String ho, String ten) {
        initComponents();
        cardBanHang.setVisible(true);
        cardThongTinKH.setVisible(false);
        jplSlideMenu.setSize(210, 600);
        Menu_NV.maND = maND;
        Menu_NV.ho = ho;
        Menu_NV.ten = ten;
        lable_TenNhanVien.setText(ho + " " + ten);
        dataProvider = new SQLServerDataProvider();
        dataProvider.open(); // Mở kết nối tới cơ sở dữ liệu
        tblDanhSachMatHang.setAutoCreateRowSorter(true);
        tblMatHangDaChon.setAutoCreateRowSorter(true);
        loadData();
    }
    private void loadData() {
        ArrayList<DanhMuc> danhMucList = DanhMucDAO.layDanhSachDanhMuc();
        DefaultListModel<String> listModel = new DefaultListModel<>();
        for (DanhMuc danhMuc : danhMucList) {
            listModel.addElement(danhMuc.getTenDanhMuc()); // Thêm tên của từng danh mục vào listModel
        }
        listDanhMuc.setModel(listModel); // Hiển thị danh sách danh mục trong listDanhMuc
        ArrayList<SanPham> dsSanPham = SanPhamDAO.layDanhSachSanPham();
        capNhatBang(dsSanPham);
        ThongTinNhanVien();
        hienThiDanhSachHoaDonCuaNhanVien(maND);
    }
    public void openMenu() {
        jplSlideMenu.setSize(x, y);
        if (x == 0) {
            new Thread(new Runnable() {
                @Override
                public void run() {
                    try {
                        for (int i = 0; i <= 210; i++) {
                            jplSlideMenu.setSize(i, y);
                            Thread.sleep(1);
                        }
                    } catch (Exception e) {
                    }
                }
            }).start();
            x = 210;
        }
    }

    public void closeMenu() {
        jplSlideMenu.setSize(x, y);
        if (x == 210) {
            new Thread(new Runnable() {
                @Override
                public void run() {
                    try {
                        for (int i = 210; i >= 0; i--) {
                            jplSlideMenu.setSize(i, y);
                            Thread.sleep(2);
                        }
                    } catch (Exception e) {
                    }
                }
            }).start();
            x = 0;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jplSlideMenu = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lable_TenNhanVien = new javax.swing.JLabel();
        lblCloseMenu = new javax.swing.JLabel();
        lblMuaHang = new javax.swing.JLabel();
        lblThongTinKH = new javax.swing.JLabel();
        lblLichSuMuaHang = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        labelDangXuat = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jpllMenuBar = new javax.swing.JPanel();
        lblOpenMenu = new javax.swing.JLabel();
        jplTitle = new javax.swing.JPanel();
        jplMain = new javax.swing.JPanel();
        cardThongTinKH = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lableHo = new javax.swing.JLabel();
        lableTaiKhoan = new javax.swing.JLabel();
        lableTen = new javax.swing.JLabel();
        lableNgayTao = new javax.swing.JLabel();
        lablePass = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        txtTaiKhoan = new javax.swing.JTextField();
        txtMatKhau = new javax.swing.JTextField();
        txtHo = new javax.swing.JTextField();
        btnCapNhat = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        cardHoaDonDaBan = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblChiTietHoaDon = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtMaHoaDon = new javax.swing.JTextField();
        lblChiTiet = new javax.swing.JLabel();
        lblTenHoaDon = new javax.swing.JLabel();
        lblTenNhanVien = new javax.swing.JLabel();
        lblPhuongThuc = new javax.swing.JLabel();
        lblNgayTao = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblDanhSachHoaDon = new javax.swing.JTable();
        cardBanHang = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblMatHangDaChon = new javax.swing.JTable();
        btnXoa = new javax.swing.JButton();
        btnXoaTatCa = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtTongHoaDon = new javax.swing.JTextField();
        lblXacNhan = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lblTongGiamGia = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        cbbPTTT = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDanhSachMatHang = new javax.swing.JTable();
        txtSoLuongMua = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        lblMoTaSanPham = new javax.swing.JLabel();
        lblThemVaoGioHang = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        lblTimKiem = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listDanhMuc = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jplSlideMenu.setBackground(new java.awt.Color(255, 255, 255));
        jplSlideMenu.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jplSlideMenu.setPreferredSize(new java.awt.Dimension(190, 590));
        jplSlideMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/Image/avatar.png"))); // NOI18N

        lable_TenNhanVien.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lable_TenNhanVien.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lable_TenNhanVien.setText("Tên Nhân viên");
        lable_TenNhanVien.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblCloseMenu.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblCloseMenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCloseMenu.setText("X");
        lblCloseMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseMenuMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(lblCloseMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(lable_TenNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCloseMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lable_TenNhanVien)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jplSlideMenu.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        lblMuaHang.setBackground(new java.awt.Color(255, 255, 255));
        lblMuaHang.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblMuaHang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMuaHang.setText("Bán Hàng");
        lblMuaHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMuaHangMouseClicked(evt);
            }
        });
        jplSlideMenu.add(lblMuaHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 210, 30));

        lblThongTinKH.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblThongTinKH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThongTinKH.setText("Thông tin cá nhân");
        lblThongTinKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblThongTinKHMouseClicked(evt);
            }
        });
        jplSlideMenu.add(lblThongTinKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 210, 30));

        lblLichSuMuaHang.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblLichSuMuaHang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLichSuMuaHang.setText("Lịch sử bán hàng");
        lblLichSuMuaHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLichSuMuaHangMouseClicked(evt);
            }
        });
        jplSlideMenu.add(lblLichSuMuaHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 210, 30));
        jplSlideMenu.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 452, 210, 10));

        labelDangXuat.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        labelDangXuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDangXuat.setText("Đăng Xuất");
        labelDangXuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelDangXuatMouseClicked(evt);
            }
        });
        jplSlideMenu.add(labelDangXuat, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 560, 210, 30));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Giới Thiệu");
        jplSlideMenu.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 520, 210, 30));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Trợ Giúp");
        jplSlideMenu.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 480, 210, 30));

        jPanel1.add(jplSlideMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 0, 600));

        jpllMenuBar.setBackground(new java.awt.Color(255, 255, 255));

        lblOpenMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/Image/menu.png"))); // NOI18N
        lblOpenMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblOpenMenuMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jpllMenuBarLayout = new javax.swing.GroupLayout(jpllMenuBar);
        jpllMenuBar.setLayout(jpllMenuBarLayout);
        jpllMenuBarLayout.setHorizontalGroup(
            jpllMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpllMenuBarLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblOpenMenu)
                .addContainerGap(1420, Short.MAX_VALUE))
        );
        jpllMenuBarLayout.setVerticalGroup(
            jpllMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpllMenuBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblOpenMenu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jpllMenuBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 1470, 40));

        jplTitle.setBackground(new java.awt.Color(0, 168, 255));

        javax.swing.GroupLayout jplTitleLayout = new javax.swing.GroupLayout(jplTitle);
        jplTitle.setLayout(jplTitleLayout);
        jplTitleLayout.setHorizontalGroup(
            jplTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1480, Short.MAX_VALUE)
        );
        jplTitleLayout.setVerticalGroup(
            jplTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel1.add(jplTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1480, 30));

        jplMain.setBackground(new java.awt.Color(255, 255, 255));
        jplMain.setLayout(new java.awt.CardLayout());

        cardThongTinKH.setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(204, 255, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Họ :");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Ngày vào làm :");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Tên :");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Tài khoản :");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Mật khẩu :");

        lableHo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lableHo.setText("Họ nhân viên");

        lableTaiKhoan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lableTaiKhoan.setText("Tài khoản");

        lableTen.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lableTen.setText("Tên nhân viên");

        lableNgayTao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lableNgayTao.setText("Ngày vào làm");

        lablePass.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lablePass.setText("Mật khẩu đăng nhập");

        jPanel8.setBackground(new java.awt.Color(204, 255, 204));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chỉnh sửa thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel20.setText("Họ :");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel21.setText("Tên :");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel22.setText("Tài khoản :");

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel23.setText("Mật khẩu :");

        txtTen.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTen.setEnabled(false);

        txtTaiKhoan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTaiKhoan.setEnabled(false);

        txtMatKhau.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtHo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtHo.setEnabled(false);

        btnCapNhat.setText("Cập nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                            .addComponent(btnCapNhat)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnReset))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel21)
                                .addComponent(jLabel20)
                                .addComponent(jLabel23))
                            .addGap(34, 34, 34)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtHo, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtHo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCapNhat)
                    .addComponent(btnReset))
                .addContainerGap(107, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel4)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel7))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lableNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lablePass, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lableTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lableHo, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lableTen, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 191, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lableHo))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(lableTen))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(lableTaiKhoan))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(lablePass))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lableNgayTao))
                .addGap(48, 48, 48)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout cardThongTinKHLayout = new javax.swing.GroupLayout(cardThongTinKH);
        cardThongTinKH.setLayout(cardThongTinKHLayout);
        cardThongTinKHLayout.setHorizontalGroup(
            cardThongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardThongTinKHLayout.createSequentialGroup()
                .addGap(524, 524, 524)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(614, Short.MAX_VALUE))
        );
        cardThongTinKHLayout.setVerticalGroup(
            cardThongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardThongTinKHLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
        );

        jplMain.add(cardThongTinKH, "card3");

        jPanel10.setBackground(new java.awt.Color(204, 255, 204));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CHI TIẾT HÓA ĐƠN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        tblChiTietHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblChiTietHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Giá", "Giá giảm", "Số lượng mua", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblChiTietHoaDon);
        if (tblChiTietHoaDon.getColumnModel().getColumnCount() > 0) {
            tblChiTietHoaDon.getColumnModel().getColumn(0).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(1).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(2).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(3).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(4).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );

        jPanel11.setBackground(new java.awt.Color(204, 255, 204));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DANH SÁCH HÓA ĐƠN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Phương thức thanh toán:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Mã hóa đơn");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Tên hóa đơn:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Tên nhân viên xuất:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Ngày tạo:");

        txtMaHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaHoaDon.setEnabled(false);
        txtMaHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaHoaDonActionPerformed(evt);
            }
        });

        lblChiTiet.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblChiTiet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/image/chitiet.jpg"))); // NOI18N
        lblChiTiet.setText("Chi tiết");
        lblChiTiet.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblChiTietMouseClicked(evt);
            }
        });

        lblTenHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTenHoaDon.setText("Tên đơn hàng");

        lblTenNhanVien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTenNhanVien.setText("Tên nhân viên");

        lblPhuongThuc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPhuongThuc.setText("Phương thức");

        lblNgayTao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNgayTao.setText("Ngày xuất");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Tổng tiền hóa đơn:");

        lblTongTien.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTongTien.setForeground(new java.awt.Color(255, 0, 0));
        lblTongTien.setText("Ngày đặt");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel8)
                    .addComponent(jLabel1)
                    .addComponent(jLabel19))
                .addGap(24, 24, 24)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPhuongThuc)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtMaHoaDon, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblTenHoaDon, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTenNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNgayTao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(340, 340, 340)
                        .addComponent(lblChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtMaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(lblTenHoaDon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblPhuongThuc))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(lblTenNhanVien))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(lblNgayTao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(lblTongTien)
                    .addComponent(lblChiTiet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 21, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        tblDanhSachHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblDanhSachHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Tên hóa đơn", "Phương thức thanh toán", "Mã người tạo", "Ngày tạo", "Tổng hóa đơn"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDanhSachHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachHoaDonMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblDanhSachHoaDon);
        if (tblDanhSachHoaDon.getColumnModel().getColumnCount() > 0) {
            tblDanhSachHoaDon.getColumnModel().getColumn(0).setResizable(false);
            tblDanhSachHoaDon.getColumnModel().getColumn(1).setResizable(false);
            tblDanhSachHoaDon.getColumnModel().getColumn(2).setResizable(false);
            tblDanhSachHoaDon.getColumnModel().getColumn(3).setResizable(false);
            tblDanhSachHoaDon.getColumnModel().getColumn(4).setResizable(false);
            tblDanhSachHoaDon.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout cardHoaDonDaBanLayout = new javax.swing.GroupLayout(cardHoaDonDaBan);
        cardHoaDonDaBan.setLayout(cardHoaDonDaBanLayout);
        cardHoaDonDaBanLayout.setHorizontalGroup(
            cardHoaDonDaBanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardHoaDonDaBanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(267, Short.MAX_VALUE))
        );
        cardHoaDonDaBanLayout.setVerticalGroup(
            cardHoaDonDaBanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardHoaDonDaBanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cardHoaDonDaBanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        jplMain.add(cardHoaDonDaBan, "card4");

        cardBanHang.setBackground(new java.awt.Color(255, 255, 255));
        cardBanHang.setEnabled(false);
        cardBanHang.setPreferredSize(new java.awt.Dimension(1500, 838));
        cardBanHang.setRequestFocusEnabled(false);
        cardBanHang.setVerifyInputWhenFocusTarget(false);

        jPanel5.setBackground(new java.awt.Color(204, 255, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "MẶT HÀNG ĐÃ CHỌN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        tblMatHangDaChon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblMatHangDaChon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Giá sản phẩm", "Giảm giá", "Số lượng mua", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblMatHangDaChon);
        if (tblMatHangDaChon.getColumnModel().getColumnCount() > 0) {
            tblMatHangDaChon.getColumnModel().getColumn(0).setResizable(false);
            tblMatHangDaChon.getColumnModel().getColumn(1).setResizable(false);
            tblMatHangDaChon.getColumnModel().getColumn(2).setResizable(false);
            tblMatHangDaChon.getColumnModel().getColumn(3).setResizable(false);
            tblMatHangDaChon.getColumnModel().getColumn(4).setResizable(false);
            tblMatHangDaChon.getColumnModel().getColumn(5).setResizable(false);
        }

        btnXoa.setText("Xóa sản phẩm");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnXoaTatCa.setText("Xóa đơn đặt");
        btnXoaTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTatCaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnXoa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXoaTatCa)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa)
                    .addComponent(btnXoaTatCa))
                .addGap(30, 30, 30))
        );

        jPanel4.setBackground(new java.awt.Color(204, 255, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "THANH TOÁN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Số tiền thanh toán:");

        txtTongHoaDon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTongHoaDon.setForeground(new java.awt.Color(255, 0, 0));
        txtTongHoaDon.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTongHoaDon.setEnabled(false);
        txtTongHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTongHoaDonActionPerformed(evt);
            }
        });

        lblXacNhan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/image/thanhtoan.jpg"))); // NOI18N
        lblXacNhan.setText("Xác nhận");
        lblXacNhan.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblXacNhan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblXacNhanMouseClicked(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setText("Tổng giảm giá: ");

        lblTongGiamGia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTongGiamGia.setForeground(new java.awt.Color(255, 0, 0));
        lblTongGiamGia.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongGiamGia.setText("0");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 0, 0));
        jLabel24.setText("VNĐ");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 0, 0));
        jLabel25.setText("VNĐ");

        cbbPTTT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbbPTTT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiền mặt", "Paypal", "Thẻ tín dụng" }));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Phương thức thanh toán:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(247, 247, 247)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTongHoaDon)
                    .addComponent(lblTongGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel25)
                    .addComponent(jLabel24))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbPTTT, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblXacNhan)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(cbbPTTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(lblTongGiamGia)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTongHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DANH SÁCH MẶT HÀNG", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        tblDanhSachMatHang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblDanhSachMatHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Giá", "Giảm giá", "Số hàng tồn kho"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDanhSachMatHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachMatHangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDanhSachMatHang);
        if (tblDanhSachMatHang.getColumnModel().getColumnCount() > 0) {
            tblDanhSachMatHang.getColumnModel().getColumn(0).setResizable(false);
            tblDanhSachMatHang.getColumnModel().getColumn(1).setResizable(false);
            tblDanhSachMatHang.getColumnModel().getColumn(2).setResizable(false);
            tblDanhSachMatHang.getColumnModel().getColumn(3).setResizable(false);
            tblDanhSachMatHang.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel2.setText("Số lượng");

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Mô tả sản phẩm"));
        jPanel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblMoTaSanPham.setBackground(new java.awt.Color(255, 255, 255));
        lblMoTaSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblMoTaSanPham.setText("Mô tả sản phẩm");
        lblMoTaSanPham.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMoTaSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMoTaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        lblThemVaoGioHang.setBackground(new java.awt.Color(255, 255, 255));
        lblThemVaoGioHang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblThemVaoGioHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/image/addGioHang.png"))); // NOI18N
        lblThemVaoGioHang.setText("Thêm mặt hàng ");
        lblThemVaoGioHang.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblThemVaoGioHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblThemVaoGioHangMouseClicked(evt);
            }
        });

        jLabel9.setText("Tìm kiếm sản phẩm:");

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });

        lblTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/image/search.png"))); // NOI18N
        lblTimKiem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTimKiemMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
                        .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtSoLuongMua)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lblThemVaoGioHang)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTimKiem)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblThemVaoGioHang, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSoLuongMua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(204, 255, 204));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DANH MỤC SẢN PHẨM", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        listDanhMuc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        listDanhMuc.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listDanhMuc.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listDanhMucValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listDanhMuc);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 379, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout cardBanHangLayout = new javax.swing.GroupLayout(cardBanHang);
        cardBanHang.setLayout(cardBanHangLayout);
        cardBanHangLayout.setHorizontalGroup(
            cardBanHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardBanHangLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(cardBanHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(cardBanHangLayout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        cardBanHangLayout.setVerticalGroup(
            cardBanHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardBanHangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cardBanHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        jplMain.add(cardBanHang, "card2");

        jPanel1.add(jplMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 1710, 760));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 835, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblCloseMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMenuMouseClicked
        closeMenu();
    }//GEN-LAST:event_lblCloseMenuMouseClicked

    private void lblOpenMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOpenMenuMouseClicked
        openMenu();
    }//GEN-LAST:event_lblOpenMenuMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        jplSlideMenu.setSize(0, y);
        x = 0;
    }//GEN-LAST:event_formWindowOpened

    private void lblMuaHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMuaHangMouseClicked
        cardBanHang.setVisible(true);
        cardThongTinKH.setVisible(false);
        cardHoaDonDaBan.setVisible(false);
    }//GEN-LAST:event_lblMuaHangMouseClicked

    private void lblThongTinKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThongTinKHMouseClicked
        cardBanHang.setVisible(false);
        cardThongTinKH.setVisible(true);
        cardHoaDonDaBan.setVisible(false);
    }//GEN-LAST:event_lblThongTinKHMouseClicked
    
    private void listDanhMucValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listDanhMucValueChanged
        // Lấy danh mục được chọn từ listDanhMuc
        String danhMucDuocChon = listDanhMuc.getSelectedValue();
        capNhatBang(SanPhamDAO.layDanhSachSanPhamTheoDanhMuc(danhMucDuocChon));
        
    }//GEN-LAST:event_listDanhMucValueChanged
    private void capNhatBang(ArrayList<SanPham> danhSachSanPham){
        DefaultTableModel dtmSanPham = (DefaultTableModel)tblDanhSachMatHang.getModel();
        dtmSanPham.setRowCount(0);
        for(SanPham sp:danhSachSanPham)
        {
            Vector<Object> vec = new Vector<Object>();
            vec.add(sp.getMaSanPham());
            vec.add(sp.getTenSanPham());
            vec.add(sp.getGia());
            vec.add(sp.getGiamGia());
            vec.add(sp.getSoLuongTonKho());
            dtmSanPham.addRow(vec);
        }
        tblDanhSachMatHang.setModel(dtmSanPham);
    }
    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        long MaND = maND;
        String hoKH = txtHo.getText();
        String tenKH = txtTen.getText();
        String taiKhoan = txtTaiKhoan.getText();
        String matKhau = txtMatKhau.getText();
        // Kiểm tra xem đã nhập đủ thông tin hay chưa
        if (hoKH.isEmpty() || tenKH.isEmpty() || taiKhoan.isEmpty() || matKhau.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin người dùng.");
            return;
        }
        NguoiDung nd = new NguoiDung(MaND,hoKH,tenKH,taiKhoan,matKhau,"Khách hàng");
        boolean kq = NguoiDungDAO.capNhatNguoiDung(nd);          
        // Cập nhật thông tin người dùng trong cơ sở dữ liệu
        if (kq) {
            JOptionPane.showMessageDialog(this, "Cập nhật thông tin người dùng thành công.");
            lable_TenNhanVien.setText(txtHo.getText() + " " +  txtTen.getText());
        } else {
            JOptionPane.showMessageDialog(this, "Cập nhật thông tin người dùng không thành công. Vui lòng thử lại sau.");
        }
        
        loadData();
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // Lấy mô hình bảng từ JTable
        DefaultTableModel model = (DefaultTableModel) tblMatHangDaChon.getModel();
        // Lấy chỉ số của dòng được chọn
        int selectedRow = tblMatHangDaChon.getSelectedRow();
        // Kiểm tra xem có dòng nào được chọn không
        if (selectedRow != -1) {
            // Lấy tên sản phẩm từ dòng được chọn, giả sử tên sản phẩm ở cột thứ 2 (index 1)
            String tenSanPham = model.getValueAt(selectedRow, 0).toString();
            // Hiển thị hộp thoại xác nhận
            int response = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa sản phẩm \"" + tenSanPham + "\" khỏi đơn hàng?", "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            // Nếu người dùng chọn "Yes"
            if (response == JOptionPane.YES_OPTION) {
                // Xóa dòng được chọn
                model.removeRow(selectedRow);
                updateTotalBill();
            }
        } else {
            // Hiển thị thông báo nếu không có dòng nào được chọn
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để xóa.");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnXoaTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTatCaActionPerformed
         int response = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa tất cả các mặt hàng trong đơn hàng?", "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        // Nếu người dùng chọn "Yes"
        if (response == JOptionPane.YES_OPTION) {
            // Lấy mô hình bảng từ JTable
            DefaultTableModel model = (DefaultTableModel) tblMatHangDaChon.getModel();
            // Xóa tất cả các hàng trong mô hình bảng
            model.setRowCount(0);
            updateTotalBill();
        }
    }//GEN-LAST:event_btnXoaTatCaActionPerformed
    
    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        ThongTinNhanVien();
    }//GEN-LAST:event_btnResetActionPerformed

    private void lblLichSuMuaHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLichSuMuaHangMouseClicked
        cardBanHang.setVisible(false);
        cardThongTinKH.setVisible(false);
        cardHoaDonDaBan.setVisible(true);
    }//GEN-LAST:event_lblLichSuMuaHangMouseClicked

    private void txtMaHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaHoaDonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaHoaDonActionPerformed

    private void tblDanhSachHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachHoaDonMouseClicked
        // TODO add your handling code here:
        System.out.println(""+lblTenNhanVien.getText());
        int row = tblDanhSachHoaDon.getSelectedRow();
        if (row != -1) {
            txtMaHoaDon.setText(String.valueOf(tblDanhSachHoaDon.getValueAt(row, 0)));
            lblTenHoaDon.setText(String.valueOf(tblDanhSachHoaDon.getValueAt(row, 1)));
            lblPhuongThuc.setText(String.valueOf(tblDanhSachHoaDon.getValueAt(row, 2)));
            lblTenNhanVien.setText(ho + " " + ten);
            lblNgayTao.setText(String.valueOf(tblDanhSachHoaDon.getValueAt(row, 4)));
            lblTongTien.setText(String.valueOf(tblDanhSachHoaDon.getValueAt(row, 5)));
        }
    }//GEN-LAST:event_tblDanhSachHoaDonMouseClicked

    private void labelDangXuatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelDangXuatMouseClicked
        int choice = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn đăng xuất không?", "Xác nhận thoát", JOptionPane.YES_NO_CANCEL_OPTION);
        switch (choice) {
            case JOptionPane.YES_OPTION:
                gui.view.Login formLogin = new  gui.view.Login();
                formLogin.setVisible(true);
                this.dispose();
            // Nếu người dùng chọn No, không làm gì cả
            case JOptionPane.NO_OPTION:
                break;
            // Nếu người dùng chọn Cancel, không làm gì cả
            case JOptionPane.CANCEL_OPTION:
                break;
            default:
                break;
        }
    }//GEN-LAST:event_labelDangXuatMouseClicked

    private void tblDanhSachMatHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachMatHangMouseClicked
        int row = tblDanhSachMatHang.getSelectedRow();
    
        // Giả sử mã sản phẩm nằm ở cột đầu tiên (chỉ số 0)
        int productIDColumnIndex = 0;

        // Lấy mã sản phẩm từ hàng được chọn
        long MaSP = (long) tblDanhSachMatHang.getValueAt(row, productIDColumnIndex);

        // Lấy mô tả sản phẩm từ cơ sở dữ liệu sử dụng SanPhamDAO
        String mota = layMoTaSanPham(MaSP);

        // Đặt văn bản của lblMoTaSanPham là mô tả sản phẩm
        lblMoTaSanPham.setText("<html><div style='width:300px;'>" + mota + "</div></html>");
        
    }//GEN-LAST:event_tblDanhSachMatHangMouseClicked

    private void lblThemVaoGioHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThemVaoGioHangMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblDanhSachMatHang.getSelectedRow();
        if (selectedRow != -1) { // Đảm bảo rằng một hàng đã được chọn
            DefaultTableModel modelDanhSachMatHang = (DefaultTableModel) tblDanhSachMatHang.getModel();
            DefaultTableModel modelMatHangDaChon = (DefaultTableModel) tblMatHangDaChon.getModel();
            Long maSP = Long.parseLong(modelDanhSachMatHang.getValueAt(selectedRow, 0).toString());
            String tenSP = modelDanhSachMatHang.getValueAt(selectedRow, 1).toString();
            double gia = Double.parseDouble(modelDanhSachMatHang.getValueAt(selectedRow, 2).toString());

            int soLuongMua;
            try {
                soLuongMua = Integer.parseInt(txtSoLuongMua.getText());
                if (soLuongMua <= 0) {
                    throw new NumberFormatException();
                }

                // Lấy số lượng tồn kho của sản phẩm
                int soLuongTonKho = SanPhamDAO.laySoLuongTonKho(maSP);

                // Kiểm tra nếu số lượng mua lớn hơn số lượng tồn kho
                if (soLuongMua > soLuongTonKho) {
                    JOptionPane.showMessageDialog(this, "Số lượng mua vượt quá số lượng tồn kho. Số lượng tồn kho hiện tại: " + soLuongTonKho, "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                double giamGia = Double.parseDouble(modelDanhSachMatHang.getValueAt(selectedRow, 3).toString());
                double TongGiamGia = giamGia * soLuongMua;
                double thanhTien = (gia * soLuongMua) - TongGiamGia;

                boolean found = false;

                // Kiểm tra xem sản phẩm đã có trong bảng MatHangDaChon chưa
                for (int i = 0; i < modelMatHangDaChon.getRowCount(); i++) {
                    Long existingMaSP = Long.parseLong(modelMatHangDaChon.getValueAt(i, 0).toString());
                    if (existingMaSP.equals(maSP)) {
                        int existingSoLuong = Integer.parseInt(modelMatHangDaChon.getValueAt(i, 4).toString());
                        double existingGia = Double.parseDouble(modelMatHangDaChon.getValueAt(i, 2).toString());
                        double existingGiamGia = Double.parseDouble(modelMatHangDaChon.getValueAt(i, 3).toString());

                        // Cập nhật số lượng và tổng giá trị
                        int newSoLuong = existingSoLuong + soLuongMua;
                        double newTongGia = existingGia * newSoLuong;
                        double newTongGiamGia = existingGiamGia + (giamGia * soLuongMua);
                        double newThanhTien = (newTongGia * newSoLuong) - newTongGiamGia;

                        modelMatHangDaChon.setValueAt(newSoLuong, i, 4);
                        modelMatHangDaChon.setValueAt(newTongGia, i, 2);
                        modelMatHangDaChon.setValueAt(newTongGiamGia, i, 3);
                        modelMatHangDaChon.setValueAt(newThanhTien, i, 5);

                        found = true;
                        break;
                    }
                }
                DecimalFormat df = new DecimalFormat("#");
                df.setMaximumFractionDigits(0); // Không có chữ số thập phân

                String formattedThanhTien = df.format(thanhTien);
                if (!found) {
                    // Thêm dữ liệu vào đầu bảng MatHangDaChon
                    Vector<Object> rowData = new Vector<>();
                    rowData.add(maSP);
                    rowData.add(tenSP);
                    rowData.add(gia);
                    rowData.add(giamGia);
                    rowData.add(soLuongMua);
                    rowData.add(formattedThanhTien);
                    modelMatHangDaChon.insertRow(0, rowData); // Thêm dòng mới vào đầu bảng
                }

                // Cập nhật tổng hóa đơn
                updateTotalBill();
            } catch (NumberFormatException e) {
                // Hiển thị thông báo nếu số lượng không hợp lệ
                JOptionPane.showMessageDialog(this, "Số lượng mua không hợp lệ. Vui lòng nhập số lượng lớn hơn 0.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // Hiển thị thông báo nếu không có sản phẩm nào được chọn
            JOptionPane.showMessageDialog(this, "Chưa có sản phẩm nào được chọn. Vui lòng chọn một sản phẩm.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
        txtSoLuongMua.setText("");
    }//GEN-LAST:event_lblThemVaoGioHangMouseClicked

    private void lblXacNhanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblXacNhanMouseClicked
        int choice = JOptionPane.showConfirmDialog(null, "Xác nhận thanh toán và xuất hóa đơn?", "Xác nhận mua", JOptionPane.YES_NO_CANCEL_OPTION);
        switch (choice) {
        case JOptionPane.YES_OPTION:
        try {
            // Thu thập thông tin hóa đơn
            String tenHoaDon ="Hóa đơn";
            String phuongThucThanhToan = cbbPTTT.getSelectedItem().toString();
            Long maNguoiDung = maND;
            LocalDateTime ngayTao = LocalDateTime.now();
            double tongTien = Double.parseDouble(txtTongHoaDon.getText());
            // Tạo đối tượng HoaDon
            HoaDon hoaDon = new HoaDon();
            hoaDon.setTenHoaDon(tenHoaDon);
            hoaDon.setPhuongThucMuaHang(phuongThucThanhToan);
            hoaDon.setMaNguoiDung(maNguoiDung);
            hoaDon.setNgayTao(ngayTao);
            hoaDon.setTongTien(tongTien);

            // Lưu hóa đơn vào cơ sở dữ liệu và lấy mã hóa đơn mới tạo
            Long maHoaDon = HoaDonDAO.themHoaDon(hoaDon);
            if (maHoaDon == null) {
                JOptionPane.showMessageDialog(null, "Lỗi khi lưu hóa đơn");
                return;
            }

            // Cập nhật tên hóa đơn với mã hóa đơn mới tạo
            String tenHoaDonMoi = "Hóa đơn " + maHoaDon;
            hoaDon.setTenHoaDon(tenHoaDonMoi);
            hoaDon.setMaHoaDon(maHoaDon);  // Đặt mã hóa đơn cho đối tượng hoaDon

            boolean isTenHoaDonUpdated = HoaDonDAO.capNhatHoaDon(hoaDon);
            if (!isTenHoaDonUpdated) {
                JOptionPane.showMessageDialog(null, "Lỗi khi cập nhật tên hóa đơn");
                return;
            }
            
            // Giả sử mã hóa đơn được trả về sau khi lưu

            // Thu thập chi tiết sản phẩm từ bảng tblMatHangDaChon
            List<ChiTietHoaDon> dsChiTietHoaDon = new ArrayList<>();
            DefaultTableModel modelMatHangDaChon = (DefaultTableModel) tblMatHangDaChon.getModel();
            for (int i = 0; i < modelMatHangDaChon.getRowCount(); i++) {
                Long maSanPham = Long.parseLong(modelMatHangDaChon.getValueAt(i, 0).toString());
                String tenSP = modelMatHangDaChon.getValueAt(i, 1).toString();
                double gia = Double.parseDouble(modelMatHangDaChon.getValueAt(i, 2).toString());
                double giamGia = Double.parseDouble(modelMatHangDaChon.getValueAt(i, 3).toString());
                int soLuong = Integer.parseInt(modelMatHangDaChon.getValueAt(i, 4).toString());

                // Tạo đối tượng ChiTietHoaDon
                ChiTietHoaDon chiTietHoaDon = new ChiTietHoaDon(0, maHoaDon, maSanPham, tenSP, gia, giamGia, soLuong, (gia*soLuong)-(giamGia*soLuong));
                dsChiTietHoaDon.add(chiTietHoaDon);

                // Cập nhật số lượng tồn kho cho từng sản phẩm
                boolean isSoLuongUpdated = SanPhamDAO.updateSoLuongTonKho(maSanPham, soLuong);
                if (!isSoLuongUpdated) {
                    JOptionPane.showMessageDialog(null, "Lỗi khi cập nhật số lượng tồn kho cho sản phẩm: " + tenSP);
                    return;
                }
            }

            // Lưu chi tiết hóa đơn vào cơ sở dữ liệu
            boolean allChiTietHoaDonSaved = true;
            for (ChiTietHoaDon chiTietHoaDon : dsChiTietHoaDon) {
                boolean isChiTietHoaDonSaved = ChiTietHoaDonDAO.themChiTietHoaDon(chiTietHoaDon);
                if (!isChiTietHoaDonSaved) {
                    allChiTietHoaDonSaved = false;
                    break;
                }
            }

            if (allChiTietHoaDonSaved) {
                JOptionPane.showMessageDialog(null, "Đã mua! Cảm ơn quý khách!");
                DefaultTableModel dtmSanPhamMua = (DefaultTableModel) tblMatHangDaChon.getModel();
                dtmSanPhamMua.setRowCount(0);

                // Gọi hàm in hóa đơn ra PDF
                inHoaDonPDF(hoaDon, dsChiTietHoaDon);
            } else {
                JOptionPane.showMessageDialog(null, "Lỗi khi lưu chi tiết hóa đơn");
            }

        } catch (Exception ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Đã xảy ra lỗi: " + ex.getMessage());
        }
        loadData();
        break;
    // Nếu người dùng chọn No, không làm gì cả
    case JOptionPane.NO_OPTION:
        break;
    // Nếu người dùng chọn Cancel, không làm gì cả
    case JOptionPane.CANCEL_OPTION:
        break;
    default:
        break;
}
    }//GEN-LAST:event_lblXacNhanMouseClicked
    private void inHoaDonPDF(HoaDon hoaDon, List<ChiTietHoaDon> dsChiTietHoaDon) {
    try {
        // Tạo một đối tượng File để đại diện cho thư mục lưu trữ hóa đơn
        File directory = new File("C:\\Users\\kebao\\OneDrive\\Documents\\Github\\DoAn\\DoAn\\HoaDon");

        // Tạo thư mục nếu nó không tồn tại
        if (!directory.exists()) {
            directory.mkdirs();
        }

        // Tạo một đối tượng Document
        Document document = new Document();

        // Tạo tên tệp PDF dựa trên mã hóa đơn
        String tenTepPDF = "hoa_don_" + hoaDon.getMaHoaDon() + ".pdf";

        // Tạo một đối tượng PdfWriter để viết dữ liệu vào tệp PDF với tên tệp đã chỉ định
        PdfWriter.getInstance(document, new FileOutputStream(directory.getAbsolutePath() + "\\" + tenTepPDF));

        document.open();

        // Thêm tiêu đề hóa đơn
        Font fontTieuDe = new Font(Font.FontFamily.HELVETICA, 16, Font.BOLD);
        Font fontNoiDung = new Font(Font.FontFamily.HELVETICA, 12);

        document.add(new Paragraph("HÓA ĐƠN BÁN HÀNG", fontTieuDe));
        document.add(new Paragraph("Ngày tạo: " + hoaDon.getNgayTao().toString(), fontNoiDung));
        document.add(new Paragraph("Mã hóa đơn: " + hoaDon.getMaHoaDon(), fontNoiDung));
        document.add(new Paragraph("Tên khách hàng: " + lable_TenNhanVien.getText(), fontNoiDung));
        document.add(new Paragraph(" "));

        // Thêm bảng chi tiết sản phẩm
        PdfPTable table = new PdfPTable(6);
        table.addCell(new Phrase("Mã sản phẩm", fontNoiDung));
        table.addCell(new Phrase("Tên sản phẩm", fontNoiDung));
        table.addCell(new Phrase("Giá hiện tại", fontNoiDung));
        table.addCell(new Phrase("Giảm giá hiện tại", fontNoiDung));
        table.addCell(new Phrase("Số lượng", fontNoiDung));
        table.addCell(new Phrase("Thành tiền", fontNoiDung));

        for (ChiTietHoaDon chiTietHoaDon : dsChiTietHoaDon) {
            table.addCell(String.valueOf(chiTietHoaDon.getMaSP()));
            table.addCell(chiTietHoaDon.getTenSP());
            table.addCell(String.valueOf(chiTietHoaDon.getGia()));
            table.addCell(String.valueOf(chiTietHoaDon.getGiamGia()));
            table.addCell(String.valueOf(chiTietHoaDon.getSoLuongMua()));
            // Tính toán thành tiền
            double giaSauGiam = chiTietHoaDon.getGia() - chiTietHoaDon.getGiamGia();
            double thanhTien = giaSauGiam * chiTietHoaDon.getSoLuongMua();
            table.addCell(String.valueOf(thanhTien));
        }
        document.add(table);

        // Thêm tổng tiền và tổng giảm giá
        document.add(new Paragraph(" "));
        document.add(new Paragraph("Tổng tiền: " + hoaDon.getTongTien()));

        document.close();
    } catch (DocumentException | IOException e) {
        Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, e);
        JOptionPane.showMessageDialog(null, "Đã xảy ra lỗi khi in hóa đơn: " + e.getMessage());
    }
}


    private void lblTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTimKiemMouseClicked
        // TODO add your handling code here:
        // Lấy thông tin từ txtTimKiem
        String timKiem = txtTimKiem.getText().trim();

        // Kiểm tra nếu trường tìm kiếm không rỗng
        if (!timKiem.isEmpty()) {
            // Tìm kiếm sản phẩm theo tên
            ArrayList<SanPham> ketQuaTimKiem = SanPhamDAO.timKiemSanPham(timKiem);
            capNhatBang(ketQuaTimKiem);
        } else {
            // Hiển thị lại toàn bộ danh sách sản phẩm nếu trường tìm kiếm rỗng
            loadData();
        }
    }//GEN-LAST:event_lblTimKiemMouseClicked

    private void lblChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblChiTietMouseClicked
        // Lấy mã hóa đơn từ JTextField
        Long maHoaDon = Long.parseLong(txtMaHoaDon.getText());

        // Truy vấn dữ liệu từ bảng ChiTietHoaDon dựa trên mã hóa đơn
        ArrayList<ChiTietHoaDon> dsChiTietHoaDon = ChiTietHoaDonDAO.layDanhSachChiTietHoaDonTheoHoaDon(maHoaDon);

        DefaultTableModel model = new DefaultTableModel();
        // Thêm các cột vào model
        model.addColumn("Mã sản phẩm");
        model.addColumn("Tên sản phẩm");
        model.addColumn("Số lượng mua");
        model.addColumn("Giá");
        model.addColumn("Giảm giá");
        model.addColumn("Thành tiền");
        DecimalFormat df = new DecimalFormat("#");
        df.setMinimumFractionDigits(0);
        
        // Thêm dữ liệu từ danh sách chi tiết hóa đơn vào model
        for (ChiTietHoaDon chiTietHoaDon : dsChiTietHoaDon) {
            // Tính toán thành tiền
            String formatTongTien = df.format(chiTietHoaDon.getTongTien());
            String formatGia = df.format(chiTietHoaDon.getGia());
            // Thêm hàng mới vào model
            model.addRow(new Object[]{
                chiTietHoaDon.getMaSP(),
                chiTietHoaDon.getTenSP(),
                chiTietHoaDon.getSoLuongMua(),
                formatGia,
                chiTietHoaDon.getGiamGia(),
                formatTongTien
            });
        }

        // Cập nhật model cho bảng tblChiTietHoaDon
        tblChiTietHoaDon.setModel(model);
    }//GEN-LAST:event_lblChiTietMouseClicked

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void txtTongHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTongHoaDonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTongHoaDonActionPerformed
    
    private void updateTotalBill() {
        DefaultTableModel modelMatHangDaChon = (DefaultTableModel) tblMatHangDaChon.getModel();
        double tongHoaDon = 0.0;
        double tongGiamGia = 0.0;
        for (int i = 0; i < modelMatHangDaChon.getRowCount(); i++) {
            double gia = Double.parseDouble(modelMatHangDaChon.getValueAt(i, 2).toString());
            double giamGia = Double.parseDouble(modelMatHangDaChon.getValueAt(i, 3).toString());
            int soLuong = Integer.parseInt(modelMatHangDaChon.getValueAt(i, 4).toString());

            double thanhTien = (gia * soLuong) - (giamGia * soLuong);
            tongHoaDon += thanhTien;
            tongGiamGia += giamGia * soLuong;

            // Cập nhật lại thành tiền cho mỗi dòng
            modelMatHangDaChon.setValueAt(thanhTien, i, 5);
        }

        // Loại bỏ phần thập phân .0 nếu tổng hóa đơn là số nguyên
        if (tongHoaDon == (int) tongHoaDon) {
            txtTongHoaDon.setText(String.valueOf((int) tongHoaDon));
        } else {
            txtTongHoaDon.setText(String.valueOf(tongHoaDon));
        }

        // Cập nhật tổng giảm giá
        lblTongGiamGia.setText(String.valueOf(tongGiamGia));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu_NV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu_NV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu_NV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu_NV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // Tạo một instance mới của Menu và truyền các thông tin cần thiết
                new Menu_NV(maND, ho, ten).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaTatCa;
    private javax.swing.JPanel cardBanHang;
    private javax.swing.JPanel cardHoaDonDaBan;
    private javax.swing.JPanel cardThongTinKH;
    private javax.swing.JComboBox<String> cbbPTTT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel jplMain;
    private javax.swing.JPanel jplSlideMenu;
    private javax.swing.JPanel jplTitle;
    private javax.swing.JPanel jpllMenuBar;
    private javax.swing.JLabel labelDangXuat;
    private javax.swing.JLabel lableHo;
    private javax.swing.JLabel lableNgayTao;
    private javax.swing.JLabel lablePass;
    private javax.swing.JLabel lableTaiKhoan;
    private javax.swing.JLabel lableTen;
    private javax.swing.JLabel lable_TenNhanVien;
    private javax.swing.JLabel lblChiTiet;
    private javax.swing.JLabel lblCloseMenu;
    private javax.swing.JLabel lblLichSuMuaHang;
    private javax.swing.JLabel lblMoTaSanPham;
    private javax.swing.JLabel lblMuaHang;
    private javax.swing.JLabel lblNgayTao;
    private javax.swing.JLabel lblOpenMenu;
    private javax.swing.JLabel lblPhuongThuc;
    private javax.swing.JLabel lblTenHoaDon;
    private javax.swing.JLabel lblTenNhanVien;
    private javax.swing.JLabel lblThemVaoGioHang;
    private javax.swing.JLabel lblThongTinKH;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JLabel lblTongGiamGia;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JLabel lblXacNhan;
    private javax.swing.JList<String> listDanhMuc;
    private javax.swing.JTable tblChiTietHoaDon;
    private javax.swing.JTable tblDanhSachHoaDon;
    private javax.swing.JTable tblDanhSachMatHang;
    private javax.swing.JTable tblMatHangDaChon;
    private javax.swing.JTextField txtHo;
    private javax.swing.JTextField txtMaHoaDon;
    private javax.swing.JTextField txtMatKhau;
    private javax.swing.JTextField txtSoLuongMua;
    private javax.swing.JTextField txtTaiKhoan;
    private javax.swing.JTextField txtTen;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtTongHoaDon;
    // End of variables declaration//GEN-END:variables
    void ThongTinNhanVien()
    {
        NguoiDung nguoiDung = NguoiDungDAO.layThongTinNguoiDung(maND);
        // Kiểm tra xem người dùng có tồn tại không
        if (nguoiDung != null) {
            // Gán thông tin người dùng vào các label
            lableHo.setText(nguoiDung.getHo());
            txtHo.setText(nguoiDung.getHo());
            lableTen.setText(nguoiDung.getTen());
            txtTen.setText(nguoiDung.getTen());
            lableTaiKhoan.setText(nguoiDung.getTenTaiKhoan());
            txtTaiKhoan.setText(nguoiDung.getTenTaiKhoan());
            lablePass.setText(nguoiDung.getMatKhau());
            txtMatKhau.setText(nguoiDung.getMatKhau());
            // Định nghĩa một DateTimeFormatter cho định dạng ngày/tháng/năm
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            // Sử dụng DateTimeFormatter để định dạng lại ngày tạo thành chuỗi ngày/tháng/năm
            String ngayTaoFormatted = nguoiDung.getNgayTao().format(formatter);
            lableNgayTao.setText(ngayTaoFormatted);
        } else {
            JOptionPane.showMessageDialog(this, "Không tìm thấy thông tin người dùng");
        }
    }

    public void hienThiDanhSachHoaDonCuaNhanVien(Long maND) {
        // Retrieve the list of invoices for the logged-in user (employee) from the HoaDonDAO
        ArrayList<HoaDon> dsHoaDon = HoaDonDAO.layDanhSachHoaDonTheoNhanVien(maND);

        // Create a DefaultTableModel to hold the data for the table
        DefaultTableModel model = new DefaultTableModel();

        // Add columns to the model
        model.addColumn("Mã hóa đơn");
        model.addColumn("Tên hóa đơn");
        model.addColumn("Phương thức thanh toán");
        model.addColumn("Mã người lập");
        model.addColumn("Ngày tạo");
        model.addColumn("Tổng tiền");

        // Create a DateTimeFormatter with the desired format
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        DecimalFormat df = new DecimalFormat("#");
        df.setMaximumFractionDigits(0); // Không có chữ số thập phân

        
        // Add data from the list of invoices to the model, formatting the date as needed
        for (HoaDon hd : dsHoaDon) {
            String formattedTongTien = df.format(hd.getTongTien());
            Object[] row = new Object[6];
            row[0] = hd.getMaHoaDon();
            row[1] = hd.getTenHoaDon();
            row[2] = hd.getPhuongThucMuaHang();
            row[3] = hd.getMaNguoiDung();
            // Format the creation date from LocalDateTime to a string in "dd/MM/yyyy" format
            row[4] = hd.getNgayTao().format(formatter);
            row[5] = formattedTongTien;
            model.addRow(row);
        }

            // Update the model for the table
            tblDanhSachHoaDon.setModel(model);
        }

    private String layMoTaSanPham(Long MaSP) {
       String moTa = "Không có mô tả cho sản phẩm này";
        try {

            Long maSanPham = MaSP;

            // Lấy danh sách sản phẩm từ cơ sở dữ liệu
            ArrayList<SanPham> danhSachSanPham = SanPhamDAO.layDanhSachSanPham();

            // Tìm sản phẩm theo mã sản phẩm và lấy mô tả
            for (SanPham sp : danhSachSanPham) {
                if (sp.getMaSanPham().equals(maSanPham)) {
                    moTa = sp.getMoTa();
                    break;
                }
            }
        } catch (NumberFormatException e) {
            e.printStackTrace();
        }
        return moTa;
    }

}
